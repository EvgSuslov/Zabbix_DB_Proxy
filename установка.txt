Об
Готовим сервер
    Время
    Брандмауэр
Устанавливаем веб-сервер
    MariaDB
    NGINX
    PHP + PHP-FPM
    NGINX + PHP
Устанавливаем сервер Zabbix
    Установка
    Настройка базы данных
    Настройка zabbix
    Запуск zabbix-server
    Настройка nginx
    Установка портала управления
Настройка Zabbix агента на сервере

Подготовка сервера
Перед установкой Zabbix выполняем подготовительные процедуры.

1. Правильное время
Для получения актуальной информации необходимо, чтобы на сервере было правильное время.

Для этого сначала задаем правильную временную зону:

timedatectl set-timezone Europe/Moscow

* в данном примере задается московское время.

Затем устанавливаем и запускаем сервис синхронизации времени:

apt install chrony

systemctl enable chrony

systemctl start chrony

2. Настройка брандмауэра
Для работы сервера, открываем следующие порты:

iptables -I INPUT -p tcp --match multiport --dports 80,443 -j ACCEPT

iptables -I INPUT -p tcp --match multiport --dports 10050,10051 -j ACCEPT

я

* где 80 — порт для http запросов (веб-интерфейс); 443 — для https запросов (веб-интерфейс); 10050 — порты для получения информации от zabbix агентов.

Для сохранения правил используем

apt install iptables-persistent

netfilter-persistent save

3. Обновляем список пакетов в репозитории:

apt update

Если наша система чистая и на ней не работают критически важные сервисы, стоит обновить установленные пакеты: 

apt upgrade

Подготовка системы закончена.

Установка веб-сервера
Управление сервером Zabbix будет осуществляться посредством веб-интерфейса. Для этого необходимо установить и настроить веб-сервер, СУБД и PHP.

СУБД
В данному инструкции мы будем использовать сервер баз данных mariadb. Zabbix версии 6 требует MariaDB версии 10.05.00 и выше. В репозитории Ubuntu 20 нет нужной нам версии, поэтому мы подключим репозиторий разработчика.

Для этого переходим по ссылке downloads.mariadb.org/mariadb/repositories и выбираем нашу версию операционной системы, последний стабильный релиз mariadb и геолокацию репозитория, например:

Выбираем нашу версию операционной системы и релиз mariadb

Ниже появится инструкция по добавлению репозитория и установке СУБД:

Инструкция по добавлению репозитория MariaDB

Согласно инструкции, создаем файл:

vi /etc/apt/sources.list.d/matiadb.list

# MariaDB 10.8 repository list - created  UTC
# https://mariadb.org/download/
deb [arch=amd64,arm64,ppc64el,s390x] https://mirror.docker.ru/mariadb/repo/10.8/ubuntu focal main
deb-src https://mirror.docker.ru/mariadb/repo/10.8/ubuntu focal main

Импортируем ключ репозитория:

apt-key adv --fetch-keys 'https://mariadb.org/mariadb_release_signing_key.asc'

Обновляем кэш пакетов:

apt update

Устанавливаем СУБД:

apt install mariadb-server

Разрешаем автозапуск сервера баз данных и запускаем mariadb:

systemctl enable mariadb

systemctl start mariadb

Задаем пароль для суперпользователя СУБД:

mysqladmin -u root password

* после ввода команды система потребует ввести пароль два раза.

Веб-сервер
Для наших целей будем использовать веб-сервер NGINX.

Для его установки вводим команду:

apt install nginx

Запускаем nginx и разрешаем его автозапуск:

systemctl enable nginx

systemctl start nginx

Открываем веб-браузер и переходим по ссылке http://<IP-адрес сервера>/ — мы должны увидеть окно приветствия:

Окно приветствия NGINX

PHP и PHP-FPM
Интерфейс zabbix разработан на PHP — наш веб-сервер должен обрабатывать скрипты, написанные на нем. Zabbix версии 6 требует PHP версии 7.2 и выше.

Устанавливаем php и необходимые компоненты:

apt install php php-fpm php-mysql php-pear php-cgi php-common php-ldap php-mbstring php-snmp php-gd php-xml php-bcmath

Для настройки php, открываем файл:

vi /etc/php/7.4/fpm/php.ini

* где 7.4 — версия PHP. В вашем случае это может быть другая версия. Проверить можно командой php -v.

Редактируем следующие параметры:

date.timezone = "Europe/Moscow"
...
max_execution_time = 300
...
post_max_size = 16M
...
max_input_time = 300
...
max_input_vars = 10000

* где:

date.timezone — временная зона. В нашем примере выставлено московское время.
max_execution_time — разрешенное время выполнения скрипта. Если последний будет выполняться дольше, система прервет его работу.
post_max_size — максимальные объем передачи данных методом POST.
max_input_time — время в секундах, за которое PHP должен разобрать входные данные GET и POST.
max_input_vars — ограничение на количество входных переменных, которые могут быть переданы на сервер в одном запросе.
Разрешим запуск php-fpm и перезапустим его:

systemctl enable php7.4-fpm

systemctl restart php7.4-fpm

NGINX + PHP
Для того, чтобы NGINX обрабатывал PHP, открываем конфигурационный файл:

vi /etc/nginx/sites-enabled/default

В секции location добавляем параметр index:

        ...
        index  index.php;
        ...

Внутри секции server добавим следующее:

        location ~ \.php$ {
                set $root_path /var/www/html;
                fastcgi_buffer_size 32k;
                fastcgi_buffers 4 32k;
                fastcgi_pass unix:/run/php/php7.4-fpm.sock;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $root_path$fastcgi_script_name;
                include fastcgi_params;
                fastcgi_param DOCUMENT_ROOT $root_path;
        }

* где /var/www/html — корневой путь хранения скриптов; /run/php/php7.4-fpm.sock — путь до сокетного файла php-fpm (точное расположение файла можно посмотреть в конфигурационном файле /etc/php/7.4/fpm/pool.d/www.conf).

Проверяем настройки nginx:

nginx -t

И перезагружаем его:

systemctl restart nginx

Создаем index.php со следующим содержимым:

vi /var/www/html/index.php

<?php phpinfo(); ?>

Открываем веб-браузер и переходим по ссылке http://<IP-адрес сервера>/ — теперь мы должны увидеть сводную информацию по PHP и его настройкам:

Сводная информация по PHP

* в нашем примере мы работаем с php7.4, а на скриншоте 7.2. Это не принципиально. Для нас важно, что страница отдает phpinfo — значит веб-сервер настроен корректно.

Веб-сервер готов для работы с Zabbix Web.

Установка и настройка сервера Zabbix
Переходим к установке самого Zabbix сервера.

Установка
Сначала установим репозиторий последней версии Zabbix. Для этого переходим на страницу https://repo.zabbix.com/zabbix/ и переходим в раздел с самой последней версией пакета - затем переходим в ubuntu/pool/main/z/zabbix-release/ - копируем ссылку на последнюю версию релиза:

Копируем ссылку на нужный релиз Zabbix

Обратите внимание, что необходимо скопировать ссылку на файл для своей версии Ubuntu — в нашем примере это 20.04. Посмотреть свою версию операционной системы можно командой:

cat /etc/os-release | grep VERSION_ID

Скачиваем файл репозитория командой:

wget https://repo.zabbix.com/zabbix/6.1/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.1-1%2Bubuntu20.04_all.deb

Устанавливаем его:

dpkg -i zabbix-release_*.deb

Обновляем списки пакетов:

apt update

Устанавливаем сервер, вводя команду:

apt install zabbix-server-mysql zabbix-frontend-php zabbix-get zabbix-sql-scripts

Настройка базы данных
Входим в оболочку ввода sql-команд:

mysql -uroot -p

Создаем базу данных:

> CREATE DATABASE zabbix DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_bin;

* мы создали базу zabbix.

Создаем пользователя для подключения и работы с созданной базой:

> GRANT ALL PRIVILEGES ON zabbix.* TO zabbix@localhost IDENTIFIED BY 'zabbixpassword';

* в данном примете мы создали пользователя zabbix с доступом к базе zabbix и паролем zabbixpassword.

Выходим из sql-оболочки:

> \q

В составе zabbix идет готовая схема для СУБД MySQL/MariaDB или postgreSQL. В нашем случае, нам нужен MySQL.

Для применения схемы переходим в каталог:

cd /usr/share/doc/zabbix-sql-scripts/mysql

Распаковываем архив с дампом базы:

gunzip server.sql.gz

Восстанавливаем базу их дампа:

mysql -u root -p zabbix < server.sql

* после ввода команды система запросит пароль. Необходимо ввести пароль, который мы задали после установки mariadb.

Настройка zabbix
Открываем конфигурационный файл zabbix:

vi /etc/zabbix/zabbix_server.conf

Добавляем строку:

DBPassword=zabbixpassword

* мы настраиваем портал на подключение к базе с паролем zabbixpassword, который задали при создании базы для zabbix.

И проверяем следующие строки:

...
DBName=zabbix
...
DBUser=zabbix
...

* имя базы и пользователя должны быть zabbix (как мы и создали в mariadb).

Создаем каталог для инклудов конфигурационных файлов (по какой-то причине, он может быть не создан при установке):

mkdir /etc/zabbix/zabbix_server.conf.d

Запуск zabbix-server
Разрешаем автозапуск сервера мониторинга:

systemctl enable zabbix-server

После запускаем сам сервер zabbix:

systemctl start zabbix-server

Настройка nginx
При установке zabbix-web файлы портала копируются в каталог /usr/share/zabbix. Наш веб-сервер работает с каталогом /var/www/html.

Меняем это — открываем конфигурационный файл nginx:

vi /etc/nginx/sites-enabled/default

Редактируем параметры root и set $root_path:

...
root /usr/share/zabbix;
...
location ~ \.php$ {
    set $root_path /usr/share/zabbix;
    ...
}
...

Перезапускаем nginx:

systemctl restart nginx

Установка портала для управления Zabbix
Открываем браузер и переходим по адресу http://<IP-адрес сервера>/ — откроется страница установки Zabbix Web.

Выбираем нужный язык установки и кликаем по Next Step:

Кликаем по ссылке Next Step для начала установки Zabbix

Если в списке языков не окажется нужного нам, устанавливаем локаль:

dpkg-reconfigure locales

* например, для русского языка выбираем в открывшемся окне ru_RU.UTF-8 UTF-8.

И перезапускаем обработчик PHP, в нашем случае:

systemctl restart php7.4-fpm

Перезагружаем страницу установки и выбираем нужный язык.

В следующем окне внимательно смотрим на результаты проверки нашего веб-сервера — справа мы должны увидеть все OK. Если это не так, проверяем настройки и исправляем предупреждения и ошибки, после перезапускаем страницу F5 для повторной проверки настроек.

Когда все результаты будут OK, кликаем по Next Step:

Кликаем по Next Step для продолжения установки Zabbix

В следующем окне мы оставляем настройки подключения к базе как есть — дополнительно прописываем пароль, который задали при создании пользователя zabbix. После нажимаем Next Step:

Вводим пароль для пользователя Zabbix

* в нашем случае, пароль был zabbixpassword;

В следующем окне оставляем все как есть:

Вводим название сервера Zabbix

... и нажимаем Next Step.

В последнем окне мы проверяем настройки и кликаем Next Step.

Установка завершена — нажимаем Finish:

Установка Zabbix завершена

В открывшемся окне вводим логин Admin и пароль zabbix (по умолчанию) — откроется окно со сводной информацией по мониторингу:

Сводная информация по мониторингу Zabbix

Zabbix Agent
В качестве примера установим zabbix agent на наш сервер. Также мы настроим шифрованное соединение между сервером и агентом.

Установка и подключение агента
Так как мы уже устанавливали репозиторий, установка агента выполняется командой:

apt install zabbix-agent

Откроем конфигурационный файл:

vi /etc/zabbix/zabbix_agentd.conf

Отредактируем следующую опцию:

Server=127.0.0.1

* в данном примере мы указываем агенту сервер Zabbix — мы может указать его имя или IP-адрес.

Разрешаем автозапуск агента и перезапускаем его:

systemctl enable zabbix-agent

systemctl restart zabbix-agent

Переходим в панель управления сервером. Открываем Настройка - Узлы сети. Мы должны увидеть единственный узел Zabbix Server:

В узлах сети мы видим наш сервер

А справа должно быть состояние доступности ZBX:

Zabbix агент доступен

Агент работает и настроен.

Включение шифрования
Чтобы обезопасить передачу данных между сервером и агентом, настроим шифрование по PSK ключу.

На агенте открываем конфигурационный файл:

vi /etc/zabbix/zabbix_agentd.conf

Приводим к виду 4 опции:

TLSConnect=psk
...
TLSAccept=psk
...
TLSPSKIdentity=PSK 001
...
TLSPSKFile=/etc/zabbix/agent_key.psk

Генерируем ключ:

openssl rand -hex 32 > /etc/zabbix/agent_key.psk

Смотрим его содержимое:

cat /etc/zabbix/agent_key.psk

Сохраняем — оно нам понадобиться.

Перезапускаем агента:

systemctl restart zabbix-agent

Переходим в веб-панель управления Zabbix. В списке узлов:

Кликаем по нашему серверу с установленным агентом

... кликаем по нашему серверу с установленным агентом.

Переходим на вкладку Шифрование. Выбираем подключение с PKS, ставим флажок только для PSK, вводим идентификатор (который задали при настройке агента в параметре TLSPSKIdentity), вводим сам ключ, который был сгенерирован в консоли агента:

Выполняем настройку подключения агента по PSK

Нажимаем Обновить для применения настроек.

Через пару минут наше состояние соединения с агентом должно быть, примерно, таким:

Наше соединение зашифровано

Шифрование настроено.


https://www.youtube.com/watch?v=SV37QaQTuPg
